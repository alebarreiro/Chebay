@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Home Page";
    var productos = ViewBag.productos;
    var usuario = @Context.User.Identity.Name;
    var tienda = @Session["Tienda_Nombre"].ToString();
}


<div class="row">
    @foreach (var dp in productos)
    {
        <div class="product-item">
            <a href="@Url.Action("Details", "Product", new { productId = @dp.ProductoID })">
                <div class="product-item-header">@dp.nombre</div>
            </a>
            <div class="c-wrapper">
                <img src="@Url.Action("getProductImg", "Product", new { productId = @dp.ProductoID, index = 0 })" class="img-centrada" alt="Responsive image" />
            </div>
            <div class="product-item-footer">
                <div class="product-item-countdown" data-id="@dp.ProductoID"> @dp.fecha_cierre.Date.ToString("yyyy-MM-dd HH:mm:ss") </div>
                @if (User.Identity.IsAuthenticated)
                {
                    <button class="btn btn-success bid-button" id="bidButton-@dp.ProductoID" data-id="@dp.ProductoID" onclick="onNewBidClick(@dp.ProductoID, '@usuario','@tienda');"> OFERTAR! </button>
                }
                else
                {
                    <button class="btn btn-success bid-button disabled" title="Inicia sesión para ofertar."> OFERTAR! </button>
                }
                <div class="offer-section">
                    <div class="offer-section-price" id="bidValue-@dp.ProductoID"> @dp.precio_actual </div>
                    <button class="offer-section-button" onclick="incrementOffer(@dp.ProductoID)"> + </button>
                </div>
                <div class="product-user-winner">
                    <p id="userIdGanador-@dp.ProductoID">@dp.idOfertante</p>
                </div>
            </div>
        </div>
    }
</div>

<div class="dropdown" style="width:100%">
    <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true">
        Filtrar por categoría
        <span class="caret"></span>
    </button>
    <ul class="dropdown-menu" id="categorias-drop" role="menu" aria-labelledby="dropdownMenu1">
        
    </ul>
</div>

<div class="row" id="allProductos">
     
</div>
<div class="paginador" id="paginador-content" style="width: 100%">
    <ul class="pagination" id="pagination" style="cursor:pointer">

    </ul>
</div>


<div class="row" id="recomendadosProductos">

</div>
     
<script id="listar-productos" type="text/x-template">
     {{#Productos}}
     {{>productItem}}
     {{/Productos}}
</script>

<script id="productItem" type="text/x-template">
    <div class="product-item">
        <a href="@Session["Tienda_Nombre"].ToString()/Product/Details?productId={{ProductoID}}">
            <div class="product-item-header"> {{nombre}}</div>
        </a>
        <div class="c-wrapper">
            <img src="@Session["Tienda_Nombre"].ToString()/Product/getProductImg?productId={{ProductoID}}&index=0" class=" img-centrada" alt="Responsive image" />
        </div>
        <div class="product-item-footer">
            <div class="product-item-countdown" data-id="{{ProductoID}}" data-value="{{fecha_cierre}}"> --:-- </div>
            @if (User.Identity.IsAuthenticated)
            {
                <button class="btn btn-success bid-button" id="bidButton-{{ProductoID}}" data-id="{{ProductoID}}" onclick="onNewBidClick({{ProductoID}}, '@usuario','@tienda');"> OFERTAR! </button>
            }
            else
            {
                <button class="btn btn-success bid-button disabled" title="Inicia sesión para ofertar."> OFERTAR! </button>
            }
            <div class="offer-section">
                <div class="offer-section-price" id="bidValue-{{ProductoID}}"> {{precio_actual}} </div>
                <button class="offer-section-button" onclick="incrementOffer({{ProductoID}})"> + </button>
            </div>
            <div class="product-user-winner">
                <p id="userIdGanador-{{ProductoID}}">{{idOfertante}}</p>
            </div>
        </div>
    </div>
</script>

<script type="text/javascript">
    /* PARA EL LISTADO DE PRODUCTOS Y TIMERS */
    var allProductos = [];
    var template = $('#listar-productos').html();
    var templateItem = $('#productItem').html();
    var pageSize = 2; //8 productos por pagina
    var cantPaginas = 1; //Calculado despues de obtener todos los prods
    Mustache.parse(template);

    $(document).ready(function () {
        $(document).ready(function () {
            $('#categorias-drop').load("@Url.Action("MostrarDropdownCategorias", "Product")")
        })

        $.ajax({
            type: "GET",
            url: "@Url.Action("obtenerJsonAllProductos", "Product")",
            data: {},
            accept: 'application/json',
            success: function (data) {
                console.log(data);
                if (data.Productos.length > 0) {
                    $.each(data.Productos, function () {
                        var prodItem = {};
                        console.log(this);
                        prodItem.fecha_cierre = moment(parseInt(this.fecha_cierre.replace("/Date(", "").replace(")/", ""), 10));
                        prodItem.ProductoID = this.ProductoID;
                        prodItem.idOfertante = this.idOfertante;
                        prodItem.nombre = this.nombre;
                        prodItem.precio_actual = this.precio_actual;
                        allProductos.push(prodItem);
                    });
                    cantPaginas = Math.ceil(data.Productos.length / pageSize);
                    var viewObject = {
                        Productos: allProductos
                    };
                    var rendered = Mustache.render(template, viewObject, { productItem: templateItem });
                    //Armamos el paginador
                    var ul = document.getElementById("pagination");
                    for (i=1; i <= cantPaginas; i++) {
                        var li = document.createElement("li"),
                            a = document.createElement("a");
                        a.appendChild(document.createTextNode(i));
                        li.appendChild(a);
                        ul.appendChild(li);
                    }
                    //Evento click pagina
                    $("#pagination li a").click(function () {
                        showPage(parseInt($(this).text()))
                    });
                    //Render del contenido
                    $('#allProductos').html(rendered);
                    //Mostramos primera pagina
                    showPage(1);
                    inicializarTimers();
                }
            },
            error: function (error) {
                console.log(error);
            }
        });

        inicializarTimers = function () {
            var auctions = $([]);
            $('.product-item-countdown').each(function () {
                var _this = $(this);
                var auction = {
                    auctionId: _this.data('id'),
                    endTime: moment(_this.data("value")),
                    timeDiv: _this
                };
                auctions.push(auction);
            });
            auctions.each(function () {
                var that = this;
                var finishTime = that.endTime,
                    duration = moment.duration(finishTime.diff(moment())),
                    interval = 1000;
                if (duration._milliseconds <= 0) {
                    that.timeDiv.text("Finalizado!");
                    $('#bidButton-' + that.productId).addClass("disabled");
                } else {
                    that.currentInterval = setInterval(function () {
                        duration = moment.duration(finishTime.diff(moment()));
                        if (duration._milliseconds <= 0) {
                            console.log(duration);
                            that.timeDiv.text("Finalizado!");
                            $('#bidButton-' + that.productId).addClass("disabled");
                            clearInterval(that.currentInterval);
                        } else {
                            var hours = duration.hours() < 10 ? '0' + duration.hours() : duration.hours(),
                                minutes = duration.minutes() < 10 ? '0' + duration.minutes() : duration.minutes(),
                                seconds = duration.seconds() < 10 ? '0' + duration.seconds() : duration.seconds(),
                                days = duration.days() > 0 ? duration.days() + "d" : "",
                                months = duration.months() > 0 ? duration.months() + "m" : "";
                            that.timeDiv.text(months + " " + days + " " + hours + ":" + minutes + ":" + seconds)
                        }
                    }, interval);
                }
            });
        }

        showPage = function (page) {
            $(".product-item").hide();
            $(".product-item").each(function (n) {
                if (n >= pageSize * (page - 1) && n < pageSize * page)
                    $(this).show();
            });
        }

        renderProductosCategoria = function (catId) {
            sacarProductosActuales();
            $.ajax({
                type: "GET",
                url: "@Url.Action("obtenerJsonProductosCategoriaIndex", "Product")",
                data: {
                    catId : catId
                },
                accept: 'application/json',
                success: function (data) {
                    console.log(data);
                    if (data.Productos.length > 0) {
                        $.each(data.Productos, function () {
                            var prodItem = {};
                            console.log(this);
                            prodItem.fecha_cierre = moment().add(1, 'day');//moment(parseInt(this.fecha_cierre.replace("/Date(", "").replace(")/", ""), 10));
                            prodItem.ProductoID = this.ProductoID;
                            prodItem.idOfertante = "test"//this.idOfertante;
                            prodItem.nombre = this.nombre;
                            prodItem.precio_actual = 123;//this.precio_actual;
                            allProductos.push(prodItem);
                        });
                        cantPaginas = Math.ceil(data.Productos.length / pageSize);
                        var viewObject = {
                            Productos: allProductos
                        };
                        var rendered = Mustache.render(template, viewObject, { productItem: templateItem });
                        //Armamos el paginador
                        $('#pagination').empty();
                        var ul = document.getElementById("pagination");
                        for (i=1; i <= cantPaginas; i++) {
                            var li = document.createElement("li"),
                                a = document.createElement("a");
                            a.appendChild(document.createTextNode(i));
                            li.appendChild(a);
                            ul.appendChild(li);
                        }
                        //Evento click pagina
                        $("#pagination li a").click(function () {
                            showPage(parseInt($(this).text()))
                        });
                        //Render del contenido
                        $('#allProductos').html(rendered).removeClass("fadeOutLeft").addClass("fadeInLeft");
                        $('#pagination').removeClass("fadeOutLeft").addClass("fadeInLeft");
                        //Mostramos primera pagina
                        showPage(1);
                        inicializarTimers();
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        sacarProductosActuales = function () {
            $("#allProductos").addClass("fadeOutLeft animated");
            $('#pagination').addClass("fadeOutLeft animated");
            allProductos = [];
            
        }
    });
    
</script>

<script type="text/javascript">
    /** LÓGICA SIGNAL R **/

    var usuario = "@Context.User.Identity.Name"

    $(function () {
        // Proxy creado a partir de signalr/hubs
        var proxy = $.connection.subastaHub;
        // Start the connection
        $.connection.hub.start()
            .done(function () { console.log('Now connected, connection ID=' + $.connection.hub.id); })
            .fail(function () { console.log('Could not Connect!'); });

        // Server callback methods
        proxy.client.newBidPosted = function (productId, newBid, userId) {
            if (userId == usuario) {
                $("#bidButton-" + productId).html("OFERTAR!");
            }
            $('#bidValue-' + productId).text(newBid);
            $('#userIdGanador-' + productId).text(userId);
        };

        proxy.client.onError = function (productId, msg) {
            $("#bidButton-" + productId).html("OFERTAR!");
            sweetAlert("Oops...", msg, "error");
        };

        proxy.client.newBuyPosted = function (productId, monto, userId) {
            auctions.each(function () {
                if (this.auctionId == productId) {
                    clearInterval(this.currentInterval);
                    this.timeDiv.text("Producto vendido!")
                    $('#bidValue-' + productId).text(monto);
                    $('#userIdGanador-' + productId).text(userId);
                    $('#bidButton-' + productId).addClass("disabled");
                    return false;
                }
            });
        };

        // Client methods
        onNewBidClick = function (id, usuario, tienda) {
            $("#bidButton-" + id).html("OFERTAR! <i class=\"fa fa-spinner fa-pulse\"></i>");
            var productId = id,
              bidToPost = parseInt($('#bidValue-' + productId).text(), 10);
            proxy.server.placeNewBid(productId, bidToPost, false, usuario, tienda);
        };

        incrementOffer = function (id) {
            $('#bidValue-' + id).text(parseInt($('#bidValue-' + id).text(), 10) + 1);
        }
    });

</script>

<style>
    /*div.c-wrapper{
        width: auto; 
        margin: auto;
        height: 57%;
    }*/
    div.c-wrapper{
        margin: 1em 0;
        position: relative;
        height: 48%;
}

.img-centrada{
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        margin: auto;
        max-width: 100%;
        max-height: 100%;
}

    .carousel-inner > .item > img, 
    .carousel-inner > .item > a > img{
        width:auto;
        height:170px;
        margin: auto;
    }
</style>


<!--Para el chat-->
<!--Div chat-->
<div id="chat_div">
</div>