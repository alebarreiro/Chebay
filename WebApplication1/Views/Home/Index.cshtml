@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Home Page";
    var productosRec = ViewBag.productosRec;
    var productosFav = ViewBag.productosFav;
    var usuario = @Context.User.Identity.Name;
    var tienda = @Session["Tienda_Nombre"].ToString();
}

@if (User.Identity.IsAuthenticated && (ViewBag.hayRecomendados || ViewBag.hayFavoritos))
{
    <div class="row">
        <div class="main">
            <div id="mi-slider" class="mi-slider">
                @if (ViewBag.hayRecomendados)
                {
                    <ul>
                        @foreach (var dp in productosRec)
                        {
                            <li><a href="@Session["Tienda_Nombre"].ToString()/Product/Details?productId=@dp.ProductoID"><img src="@Url.Action("getProductImg", "Product", new { productId = @dp.ProductoID, index = 0 })" alt="img01"><h4>@dp.nombre</h4></a></li>
                        }
                    </ul>
                }
                @if (ViewBag.hayFavoritos)
                {
                    <ul>
                        @foreach (var dp in productosFav)
                        {
                            <li><a href="@Session["Tienda_Nombre"].ToString()/Product/Details?productId=@dp.ProductoID"><img src="@Url.Action("getProductImg", "Product", new { productId = @dp.ProductoID, index = 0 })" alt="img01"><h4>@dp.nombre</h4></a></li>
                        }
                    </ul>
                }
                <cnav>
                    @if (ViewBag.hayRecomendados)
                    {
                        <a href="#">Recomendados para tí</a>
                    }
                    @if (ViewBag.hayFavoritos)
                    {
                        <a href="#">Favoritos</a>
                    }
                </cnav>
            </div>
        </div>
    </div>
}

<div class="responsive-title">
    Subastas en vivo
</div>

<hr class="ihr" />

<div class="dropdown" style="width:100%">
    <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true">
        Filtrar por categoría
        <span class="caret"></span>
    </button>
    <ul class="dropdown-menu" id="categorias-drop" role="menu" aria-labelledby="dropdownMenu1"></ul>
</div>

<div class="row" id="allProductos">
    <i class="fa fa-spinner fa-pulse fa-4x" style="margin-left: 46%;"></i>
</div>
<div class="paginador" id="paginador-content" style="width: 100%">
    <ul class="pagination" id="pagination" style="cursor:pointer"></ul>
</div>


<div class="row" id="recomendadosProductos">

</div>

<script id="listar-productos" type="text/x-template">
    {{#Productos}}
    {{>productItem}}
    {{/Productos}}
</script>

<script id="productItem" type="text/x-template">
    <div class="product-item" data-id="{{ProductoID}}">
        <a href="@Session["Tienda_Nombre"].ToString()/Product/Details?productId={{ProductoID}}">
            <div class="product-item-header" title="{{title}}">{{nombre}}</div>
        </a>
        <div class="c-wrapper">
            <img src="@Session["Tienda_Nombre"].ToString()/Product/getProductImg?productId={{ProductoID}}&index=0" class=" img-centrada" alt="Responsive image" />
        </div>
        <div class="product-item-footer">
            <div class="product-item-countdown" data-id="{{ProductoID}}" data-value="{{fecha_cierre}}"> --:-- </div>
            @if (User.Identity.IsAuthenticated)
            {
                <button class="btn btn-success bid-button fixbutton" id="bidButton-{{ProductoID}}" data-id="{{ProductoID}}" onclick="onNewBidClick({{ProductoID}}, '@usuario','@tienda');"> OFERTAR! </button>
            }
            else
            {
                <button class="btn btn-success bid-button fixbutton disabled" title="Inicia sesión para ofertar."> OFERTAR! </button>
            }
            <div class="offer-section">
                <div class="offer-section-price" id="bidValue-{{ProductoID}}"> {{precio_actual}} </div>
                <button class="offer-section-button" onclick="incrementOffer({{ProductoID}})"> + </button>
            </div>
            <div class="product-user-winner" style="overflow: hidden; text-overflow: ellipsis;">
                <p id="userIdGanador" title="Usuario que va ganando la subasta">{{idOfertante}}</p>
            </div>
        </div>
    </div>
</script>

<script type="text/javascript">
    /* PARA EL LISTADO DE PRODUCTOS Y TIMERS */
    var allProductos = [];
    var template = $('#listar-productos').html();
    var templateItem = $('#productItem').html();
    var pageSize = 8; //8 productos por pagina
    var cantPaginas = 1; //Calculado despues de obtener todos los prods
    var auctionsTimers; //Productos con los timers
    Mustache.parse(template);

    $(document).ready(function () {
        $('#categorias-drop').load("@Url.Action("MostrarDropdownCategorias", "Product")")

        /**
            Función para obtener todos los productos de la tienda
            ordenados por fecha de cierre
        */
        $.ajax({
            type: "GET",
            url: "@Url.Action("obtenerJsonAllProductos", "Product")",
            data: {},
            accept: 'application/json',
            success: function (data) {
                if (data.Productos.length > 0) {
                    cargarDatosProducto(data.Productos);
                    cantPaginas = Math.ceil(data.Productos.length / pageSize);
                    var viewObject = {
                        Productos: allProductos
                    };
                    var rendered = Mustache.render(template, viewObject, { productItem: templateItem });
                    //Armamos el paginador
                    var ul = document.getElementById("pagination");
                    for (i = 1; i <= cantPaginas; i++) {
                        var li = document.createElement("li"),
                            a = document.createElement("a");
                        a.appendChild(document.createTextNode(i));
                        li.appendChild(a);
                        ul.appendChild(li);
                    }
                    //Evento click pagina
                    $("#pagination li a").click(function () {
                        showPage(parseInt($(this).text()))
                    });
                    //Render del contenido
                    $('#allProductos').html(rendered);
                    //Mostramos primera pagina
                    showPage(1);
                    inicializarTimers();
                } else {
                    $('#allProductos').html("<h2> No hay productos. </h2>")
                }
            },
            error: function (error) {
                console.log(error);
            }
        });

        /**
            Para cada producto listado, se calcula cuanto falta para que cierre
            y se muestra el timer (countdown hasta 0)
        */
        inicializarTimers = function () {
            auctionsTimers = $([]);
            $('.product-item-countdown').each(function () {
                var _this = $(this);
                var auction = {
                    auctionId: _this.data('id'),
                    endTime: moment(_this.data("value")),
                    timeDiv: _this
                };
                auctionsTimers.push(auction);
            });
            auctionsTimers.each(function () {
                var that = this;
                var finishTime = that.endTime,
                    duration = moment.duration(finishTime.diff(moment().utc().format("YYYY-MM-DD HH:mm:ss"))),
                    interval = 1000;
                if (duration._milliseconds <= 0) {
                    that.timeDiv.text("Finalizado!");
                    $('#bidButton-' + that.productId).addClass("disabled");
                } else {
                    that.currentInterval = setInterval(function () {
                        duration = moment.duration(finishTime.diff(moment().utc().format("YYYY-MM-DD HH:mm:ss")));
                        if (duration._milliseconds <= 0) {
                            that.timeDiv.text("Finalizado!");
                            $('#bidButton-' + that.productId).addClass("disabled");
                            clearInterval(that.currentInterval);
                        } else {
                            var hours = duration.hours() < 10 ? '0' + duration.hours() : duration.hours(),
                                minutes = duration.minutes() < 10 ? '0' + duration.minutes() : duration.minutes(),
                                seconds = duration.seconds() < 10 ? '0' + duration.seconds() : duration.seconds(),
                                days = duration.days() > 0 ? duration.days() + "d" : "",
                                months = duration.months() > 0 ? duration.months() + "m" : "";
                            that.timeDiv.text(months + " " + days + " " + hours + ":" + minutes + ":" + seconds)
                        }
                    }, interval);
                }
            });
        }

        /**
            Cuando el usuario selecciona una categoría, se obtienen los productos
            de esa categoría y se vuelven a renderizar.
        */
        renderProductosCategoria = function (catId) {
            sacarProductosActuales();
            $.ajax({
                type: "GET",
                url: "@Url.Action("obtenerJsonProductosCategoriaIndex", "Product")",
                data: {
                    catId: catId
                },
                accept: 'application/json',
                success: function (data) {
                    console.log(data);
                    if (data.Productos.length > 0) {
                        cargarDatosProducto(data.Productos);
                        cantPaginas = Math.ceil(data.Productos.length / pageSize);
                        var viewObject = {
                            Productos: allProductos
                        };
                        var rendered = Mustache.render(template, viewObject, { productItem: templateItem });
                        //Armamos el paginador
                        $('#pagination').empty();
                        var ul = document.getElementById("pagination");
                        for (i = 1; i <= cantPaginas; i++) {
                            var li = document.createElement("li"),
                                a = document.createElement("a");
                            a.appendChild(document.createTextNode(i));
                            li.appendChild(a);
                            ul.appendChild(li);
                        }
                        //Evento click pagina
                        $("#pagination li a").click(function () {
                            showPage(parseInt($(this).text()))
                        });
                        //Render del contenido

                        $('#allProductos').html(rendered).removeClass("zoomOutUp").addClass("zoomInDown");
                        $('#pagination').removeClass("fadeOutLeft").addClass("fadeInLeft");
                        //Mostramos primera pagina
                        showPage(1);
                        inicializarTimers();
                    } else {
                        $('#allProductos').html("<h2> No hay productos. </h2>").removeClass("zoomOutUp").addClass("zoomInDown");
                    }
                    $("#dropdownMenu1").html("Filtrar por categoría <span class=\"caret\"></span>");
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        /**
            Datos que se muestran en cada product item.
        */
        cargarDatosProducto = function (Productos) {
            $.each(Productos, function () {
                var prodItem = {};
                prodItem.fecha_cierre = moment(parseInt(this.fecha_cierre.replace("/Date(", "").replace(")/", ""), 10));
                prodItem.ProductoID = this.ProductoID;
                prodItem.idOfertante = showUserName(this.idOfertante);
                prodItem.nombre = this.nombre.length > 43 ? this.nombre.substring(0, 40) + "..." : this.nombre;
                prodItem.title = this.nombre;
                prodItem.precio_actual = this.precio_actual;
                allProductos.push(prodItem);
            });
        }

        sacarProductosActuales = function () {
            $("#dropdownMenu1").html("Filtrar por categoría <i class=\"fa fa-spinner fa-pulse\"></i>");
            $("#allProductos").addClass("zoomOutUp animated");
            $('#pagination').addClass("fadeOutLeft animated");
            allProductos = [];
        }

        showPage = function (page) {
            $(".product-item").hide();
            $(".product-item").each(function (n) {
                if (n >= pageSize * (page - 1) && n < pageSize * page)
                    $(this).show();
            });
        }
    });

</script>

<script type="text/javascript">
    /** LÓGICA SIGNAL R **/

    var usuario = "@Context.User.Identity.Name"

    $(function () {
        // Proxy creado a partir de signalr/hubs
        var proxy = $.connection.subastaHub;
        // Start the connection
        $.connection.hub.start()
            .done(function () { console.log('Now connected, connection ID=' + $.connection.hub.id); })
            .fail(function () { console.log('Could not Connect!'); });

        $(function () {
            $('#mi-slider').catslider();
        });

        // Server callback methods
        proxy.client.newBidPosted = function (productId, newBid, userId) {
            $('.product-item').each(function () {
                var prod = $(this),
                    prodId = prod.data('id');
                if (productId == prodId) {
                    if (userId == usuario) {
                        prod.find('.bid-button').html("OFERTAR!");
                    }
                    prod.find('.offer-section-price').text(newBid);
                    prod.find('.offer-section-price').effect("highlight", 1000);
                    prod.find('#userIdGanador').text(showUserName(userId));
                }
            });
        };

        proxy.client.onError = function (productId, msg) {
            $("#bidButton-" + productId).html("OFERTAR!");
            sweetAlert("Oops...", msg, "error");
        };

        proxy.client.newBuyPosted = function (productId, monto, userId) {
            $('.product-item').each(function () {
                var prod = $(this),
                    prodId = prod.data('id');
                if (productId == prodId) {
                    prod.find('.bid-button').addClass("disabled");
                    prod.find('.offer-section-price').text(monto);
                    prod.find('.offer-section-price').effect("highlight", 1000);
                    prod.find('#userIdGanador').text(showUserName(userId));
                }
            });
            //Limpiamos el timer
            auctionsTimers.each(function () {
                if (this.auctionId == productId) {
                    clearInterval(this.currentInterval);
                    this.timeDiv.text("Producto vendido!")
                    return false;
                }
            });
        };

        // Client methods
        onNewBidClick = function (id, usuario, tienda) {
            $("#bidButton-" + id).html("OFERTAR! <i class=\"fa fa-spinner fa-pulse\"></i>");
            var productId = id,
              bidToPost = parseInt($('#bidValue-' + productId).text(), 10);
            proxy.server.placeNewBid(productId, bidToPost, false, usuario, tienda);
        };

        incrementOffer = function (id) {
            $('#bidValue-' + id).text(parseInt($('#bidValue-' + id).text(), 10) + 1);
        }

    });

</script>

<style>
    /*div.c-wrapper{
        width: auto;
        margin: auto;
        height: 57%;
    }*/
    div.c-wrapper {
        margin: 1em 0;
        position: relative;
        height: 48%;
    }

    .img-centrada {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        margin: auto;
        max-width: 100%;
        max-height: 100%;
    }

    .carousel-inner > .item > img,
    .carousel-inner > .item > a > img {
        max-height: 400px;
        margin: auto;
    }
</style>


<!--Para el chat-->
<!--Div chat-->
<div id="chat_div">
</div>